<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="d0/d41/_b_l_d_c_m-control_8cpp" kind="file" language="C++">
    <compoundname>BLDCM-control.cpp</compoundname>
    <includes refid="d7/da6/_b_l_d_c_m-control_8hpp" local="yes">BLDCM-control.hpp</includes>
    <incdepgraph>
      <node id="7">
        <label>Arduino.h</label>
      </node>
      <node id="16">
        <label>tle9xxx-conf-dfl.hpp</label>
        <link refid="d7/dc6/tle9xxx-conf-dfl_8hpp"/>
      </node>
      <node id="15">
        <label>tle9xxx-conf-opts.hpp</label>
        <link refid="d0/d80/tle9xxx-conf-opts_8hpp"/>
      </node>
      <node id="14">
        <label>../config/tle9xxx-conf.hpp</label>
        <link refid="dc/dc2/tle9xxx-conf_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>BLDCM-control.cpp</label>
        <link refid="d0/d41/_b_l_d_c_m-control_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BLDCM-control.hpp</label>
        <link refid="d7/da6/_b_l_d_c_m-control_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>TLE9563.hpp</label>
        <link refid="d7/d92/_t_l_e9563_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>TLE9xxx-reg.hpp</label>
        <link refid="d6/d9b/_t_l_e9xxx-reg_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>TLE9xxx.hpp</label>
        <link refid="d7/def/_t_l_e9xxx_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../pal/adc.hpp</label>
        <link refid="d5/d90/adc_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../pal/gpio.hpp</label>
        <link refid="d1/d2c/gpio_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>../pal/logger.hpp</label>
        <link refid="d6/da3/logger_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../pal/spic.hpp</label>
        <link refid="d8/df0/spic_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../pal/timer.hpp</label>
        <link refid="df/d05/timer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>../util/BLDCM-logger.hpp</label>
        <link refid="de/d67/_b_l_d_c_m-logger_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/da6/_b_l_d_c_m-control_8hpp" kindref="compound">BLDCM-control.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">BLDCMcontrol::BLDCMcontrol(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmU<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmV<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmU<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfU<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfV<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfW<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>hallA<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>hallB<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>hallC<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>timer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>rpmtimer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">BLDCMcontrol::~BLDCMcontrol(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>pwmU<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmV<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmU<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfU<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfV<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfW<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>hallA<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>hallB<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>hallC<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>timer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>rpmtimer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a06134dd6d9cdfa2d87c1e8be1bc7ef63" kindref="member">BLDCMcontrol::begin</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga7981ab50d1fe15336933075dd6259426" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga882af4512b1251d0110c3ee99f68c184" kindref="member">config</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmU-&gt;init();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmV-&gt;init();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmW-&gt;init();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmU-&gt;setWriteFrequency(1);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmV-&gt;setWriteFrequency(1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmW-&gt;setWriteFrequency(1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfU-&gt;<ref refid="d4/dde/class_g_p_i_o_1af1a6667e1ceda3d38b875da1486e1f33" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfV-&gt;<ref refid="d4/dde/class_g_p_i_o_1af1a6667e1ceda3d38b875da1486e1f33" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfW-&gt;<ref refid="d4/dde/class_g_p_i_o_1af1a6667e1ceda3d38b875da1486e1f33" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>hallA-&gt;<ref refid="d4/dde/class_g_p_i_o_1af1a6667e1ceda3d38b875da1486e1f33" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>hallB-&gt;<ref refid="d4/dde/class_g_p_i_o_1af1a6667e1ceda3d38b875da1486e1f33" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>hallC-&gt;<ref refid="d4/dde/class_g_p_i_o_1af1a6667e1ceda3d38b875da1486e1f33" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1ad786d9deba1abbc132006ea989187b32" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>rpmtimer-&gt;<ref refid="d8/d08/class_timer_1ad786d9deba1abbc132006ea989187b32" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a7fd5ebab7dce850ab61c0ed61a34fc66" kindref="member">BLDCMcontrol::end</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmU-&gt;deinit();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmV-&gt;deinit();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>pwmW-&gt;deinit();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfU-&gt;<ref refid="d4/dde/class_g_p_i_o_1a0531e0c0d2abc6a56b80f4fc8d1559e8" kindref="member">deinit</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfV-&gt;<ref refid="d4/dde/class_g_p_i_o_1a0531e0c0d2abc6a56b80f4fc8d1559e8" kindref="member">deinit</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>bemfW-&gt;<ref refid="d4/dde/class_g_p_i_o_1a0531e0c0d2abc6a56b80f4fc8d1559e8" kindref="member">deinit</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>hallA-&gt;<ref refid="d4/dde/class_g_p_i_o_1a0531e0c0d2abc6a56b80f4fc8d1559e8" kindref="member">deinit</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>hallB-&gt;<ref refid="d4/dde/class_g_p_i_o_1a0531e0c0d2abc6a56b80f4fc8d1559e8" kindref="member">deinit</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>hallC-&gt;<ref refid="d4/dde/class_g_p_i_o_1a0531e0c0d2abc6a56b80f4fc8d1559e8" kindref="member">deinit</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1a8e91e17ba88138d752854a03dea2467d" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>rpmtimer-&gt;<ref refid="d8/d08/class_timer_1a8e91e17ba88138d752854a03dea2467d" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a441143709285434163afdc8423789ca5" kindref="member">BLDCMcontrol::serveBLDCshield</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_MotorStartEnable<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MotorParam.speedmode<sp/>==<sp/>BLDC_RPM)<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a126f57ec0db5feb1bc0b28de9c640a7f" kindref="member">PI_Regulator_DoWork</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>Dutycycle<sp/>within<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(MotorParam.feedbackmode)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BLDC_BEMF:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a3f4c9783842b86adc5a0c115efb7820c" kindref="member">DoBEMFCommutation</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BLDC_HALL:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a1bfd3d3f6abbcd16411659ac35a71ca8" kindref="member">DoHALLCommutation</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BLDC_FOC:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>BLDC_FOC<sp/>not<sp/>yet<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a82aea9fa422c4961e9bc51448104c3b9" kindref="member">PrintErrorMessage</ref>(PARAMETER_MISSING);<sp/></highlight><highlight class="comment">//<sp/>Error:<sp/>MotorMode<sp/>not<sp/>yet<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_RFTReg_enable)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>Rise-/Falltime<sp/>regulation<sp/>if<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(_RFTReg_phase)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>Rise/Falltime<sp/>regulation<sp/>is<sp/>only<sp/>applied<sp/>,<sp/>when<sp/>the<sp/>correct<sp/>Phase<sp/>is<sp/>in<sp/>active<sp/>PWM<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PHASE1:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((_commutationStep<sp/>==<sp/>0)<sp/>||<sp/>(_commutationStep<sp/>==<sp/>1))<sp/>_RFTReg_enable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PHASE2:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((_commutationStep<sp/>==<sp/>2)<sp/>||<sp/>(_commutationStep<sp/>==<sp/>3))<sp/>_RFTReg_enable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PHASE3:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((_commutationStep<sp/>==<sp/>4)<sp/>||<sp/>(_commutationStep<sp/>==<sp/>5))<sp/>_RFTReg_enable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_RFTReg_enable<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d9/d8d/group__tle9xxxapi_1gadf275dbf7f04495cad453ec1cc9e68ae" kindref="member">emaCalculation</ref>(_RFTReg_phase,<sp/>_RFT_risetime,<sp/>_RFT_falltime);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d9/d8d/group__tle9xxxapi_1ga6770234f70fc34ea413597ff5bc5c1ec" kindref="member">adaptiveHysteresisDecisionTree</ref><sp/>(_RFTReg_phase,<sp/>_RFT_iCharge,<sp/>_RFT_iDischarge);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1af77038072deb7add69ecd795e6b92cfd" kindref="member">BLDCMcontrol::checkTLEshield</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>uint8_t<sp/>returnvalue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(interrupt_status_changed)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>returnvalue<sp/>=<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d9/d8d/group__tle9xxxapi_1ga4287b4c3b90e8b4ebdc680e08da64dc6" kindref="member">checkStatusInformationField</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interrupt_status_changed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnvalue;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1aa67ed1478b0aa0e586cf4985df560608" kindref="member">BLDCMcontrol::configBLDCshield</ref>(uint8_t<sp/>agc<sp/>=<sp/>AGC_ACTIVE)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga882af4512b1251d0110c3ee99f68c184" kindref="member">config</ref>(agc);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Amount<sp/>of<sp/>steps<sp/>for<sp/>one<sp/>full<sp/>Revolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>_NumberofSteps<sp/>=<sp/>(float)<sp/>MotorParam.MotorPolepairs<sp/>*<sp/>6.0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d9/d8d/group__tle9xxxapi_1gad648699c59a176eabd881829ec566611" kindref="member">configInterruptMask</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1aceeca2f716f9bc97b33ab2bb3931e9a3" kindref="member">BLDCMcontrol::setLED</ref>(uint16_t<sp/>red,<sp/>uint16_t<sp/>green,<sp/>uint16_t<sp/>blue)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1gaf3fc37061a65d4ad4d89d4759630f791" kindref="member">setHSS</ref>(green,<sp/>red,<sp/>blue);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a97960d80e8c866277bd0bc597f5d13a7" kindref="member">BLDCMcontrol::setBLDCspeed</ref>(uint32_t<sp/>speed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>direction,<sp/>uint8_t<sp/>fieldweakening<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(MotorParam.speedmode)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BLDC_DUTYCYCLE:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//speed<sp/>=<sp/>(speed<sp/>*<sp/>CONF_DUTYCYCLE_TOP_LIMIT)<sp/>/<sp/>1000;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>TODO:<sp/>0.255<sp/>=<sp/>(ReadAnalogWriteAccuracy()<sp/>/<sp/>1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>(speed&gt;&gt;2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(speed<sp/>&gt;<sp/>CONF_DUTYCYCLE_TOP_LIMIT)<sp/>_DutyCycle<sp/>=<sp/>CONF_DUTYCYCLE_TOP_LIMIT;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>_DutyCycle<sp/>=<sp/>speed;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BLDC_RPM:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_RefRPM<sp/>=<sp/>speed;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BLDC_POSITION:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>for<sp/>FOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a82aea9fa422c4961e9bc51448104c3b9" kindref="member">PrintErrorMessage</ref>(PARAMETER_MISSING);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>_Direction<sp/>=<sp/>direction;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>_FieldWeakening<sp/>=<sp/>fieldweakening;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae5d5cffe3475075818a8b29da61f5557" kindref="member">BLDCMcontrol::startBLDCM</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(MotorParam.feedbackmode<sp/>==<sp/>BLDC_BEMF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>uint8_t<sp/>dt_prev<sp/>=<sp/>_DutyCycle;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>_DutyCycle<sp/>=<sp/>CONF_OPEN_LOOP_DUTYCYCLE;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>uint16_t<sp/>i<sp/>=<sp/>CONF_OPEN_LOOP_DELAY_START;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>uint8_t<sp/>CommStartup<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i&gt;CONF_OPEN_LOOP_DELAY_LIMIT)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1a5b72f03fa82bdc8932042d77abadcbfd" kindref="member">delayMicro</ref>(i);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>_Commutation<sp/>=<sp/>CommStartup;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a0e120427cce5e2bb5dae353540f13fa5" kindref="member">UpdateHardware</ref>(CommStartup);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_Direction<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CommStartup++;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CommStartup==6)<sp/>CommStartup=0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_Direction<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CommStartup==0)<sp/>CommStartup=6;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CommStartup--;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>i=i-CONF_OPEN_LOOP_DELAY_SLOPE;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>_DutyCycle<sp/>=<sp/>dt_prev;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1a35282728bc2a470190325982d6a2c6e0" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MotorParam.feedbackmode<sp/>==<sp/>BLDC_HALL)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>_oldPattern<sp/>=<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a34242fb60ba90c268c0c34bb7c254c44" kindref="member">ReadHallSensor</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a0e120427cce5e2bb5dae353540f13fa5" kindref="member">UpdateHardware</ref>(<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a878c7b9c1b5ab10ed596ad49996ab0b8" kindref="member">HallPattern</ref>[_FieldWeakening][_Direction][_oldPattern]<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1a35282728bc2a470190325982d6a2c6e0" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MotorParam.speedmode<sp/>==<sp/>BLDC_RPM)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>_DutyCycle<sp/>=<sp/>CONF_RPM_DUTYCYCLE_AT_START;<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MotorParam.MotorPolepairs<sp/>==<sp/>0)<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a82aea9fa422c4961e9bc51448104c3b9" kindref="member">PrintErrorMessage</ref>(PARAMETER_MISSING);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>rpmtimer-&gt;<ref refid="d8/d08/class_timer_1a35282728bc2a470190325982d6a2c6e0" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//_DutyCycle<sp/>=<sp/>100;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>_LastBLDCspeed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>_MotorStartEnable<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>use<sp/>of<sp/>serveBLDCshield()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ac1d7bf8f70b327f312e83ebdb7a2551f" kindref="member">BLDCMcontrol::stopBLDCM</ref>(uint8_t<sp/>brakemode)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(brakemode<sp/>==<sp/>BRAKEMODE_PASSIVE)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga0500575219d73e95ec20217397fe9b5b" kindref="member">setHalfbridge</ref>(<ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(brakemode<sp/>==<sp/>BRAKEMODE_ACTIVE)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga0500575219d73e95ec20217397fe9b5b" kindref="member">setHalfbridge</ref>(<ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>_LastBLDCspeed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>_MotorStartEnable<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prohibit<sp/>the<sp/>use<sp/>of<sp/>serveBLDCshield()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a3f4c9783842b86adc5a0c115efb7820c" kindref="member">BLDCMcontrol::DoBEMFCommutation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_LastBLDCspeed<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback,<sp/>if<sp/>StartBLDC()<sp/>was<sp/>not<sp/>called<sp/>in<sp/>main<sp/>user<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae5d5cffe3475075818a8b29da61f5557" kindref="member">startBLDCM</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>uint32_t<sp/>Elapsed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1a21d5520b9dfd717e72610ac9aebfc60f" kindref="member">elapsed</ref>(Elapsed);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>_latestPattern<sp/>=<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a9c71b8b41ff9a07bb8a9674d99654b5b" kindref="member">ReadBEMFSensor</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_latestPattern<sp/>!=<sp/>_oldPattern)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>_oldPattern<sp/>=<sp/>_latestPattern;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>_commutationStep<sp/>=<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a6fed704cb770bbcf5c8ef4a0448263b9" kindref="member">BEMFPattern</ref>[<sp/>0<sp/>][_Direction][_latestPattern];<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>field<sp/>weakening<sp/>range<sp/>possible<sp/>in<sp/>BEMF<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a0e120427cce5e2bb5dae353540f13fa5" kindref="member">UpdateHardware</ref>(<sp/>_commutationStep<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MotorParam.speedmode<sp/>==<sp/>BLDC_RPM)<sp/>_StepCounter<sp/>++;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1a35282728bc2a470190325982d6a2c6e0" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Elapsed<sp/>&gt;<sp/><ref refid="d7/da6/_b_l_d_c_m-control_8hpp_1a2225243408bba380bad0e4186e969062" kindref="member">CONF_TIMEOUT</ref>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>work<sp/>very<sp/>well,<sp/>as<sp/>the<sp/>BEMFPattern<sp/>changes<sp/>quickly<sp/>when<sp/>motor<sp/>is<sp/>blocked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ac1d7bf8f70b327f312e83ebdb7a2551f" kindref="member">stopBLDCM</ref>(BRAKEMODE_PASSIVE);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a1bfd3d3f6abbcd16411659ac35a71ca8" kindref="member">BLDCMcontrol::DoHALLCommutation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_LastBLDCspeed<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback,<sp/>if<sp/>StartBLDC()<sp/>was<sp/>not<sp/>called<sp/>in<sp/>main<sp/>user<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae5d5cffe3475075818a8b29da61f5557" kindref="member">startBLDCM</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>uint32_t<sp/>Elapsed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1a21d5520b9dfd717e72610ac9aebfc60f" kindref="member">elapsed</ref>(Elapsed);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>_latestPattern<sp/>=<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a34242fb60ba90c268c0c34bb7c254c44" kindref="member">ReadHallSensor</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_latestPattern<sp/>!=<sp/>_oldPattern)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>_oldPattern<sp/>=<sp/>_latestPattern;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>_commutationStep<sp/>=<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a878c7b9c1b5ab10ed596ad49996ab0b8" kindref="member">HallPattern</ref>[_FieldWeakening][_Direction][_oldPattern];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a0e120427cce5e2bb5dae353540f13fa5" kindref="member">UpdateHardware</ref>(<sp/>_commutationStep<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MotorParam.speedmode<sp/>==<sp/>BLDC_RPM)<sp/>_StepCounter<sp/>++;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1a35282728bc2a470190325982d6a2c6e0" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Elapsed<sp/>&gt;<sp/><ref refid="d7/da6/_b_l_d_c_m-control_8hpp_1a2225243408bba380bad0e4186e969062" kindref="member">CONF_TIMEOUT</ref>)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ac1d7bf8f70b327f312e83ebdb7a2551f" kindref="member">stopBLDCM</ref>(BRAKEMODE_PASSIVE);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a126f57ec0db5feb1bc0b28de9c640a7f" kindref="member">BLDCMcontrol::PI_Regulator_DoWork</ref>()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>uint32_t<sp/>Elapsed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>rpmtimer-&gt;<ref refid="d8/d08/class_timer_1a21d5520b9dfd717e72610ac9aebfc60f" kindref="member">elapsed</ref>(Elapsed);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Elapsed<sp/>&gt;<sp/>CONF_PI_UPDATE_INTERVAL)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>RPM<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>steps<sp/>=<sp/>(float)<sp/>_StepCounter;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Formula<sp/>for<sp/>100ms<sp/>intervall:<sp/>RPM<sp/>=<sp/>(Hallcounts<sp/>/<sp/>(6<sp/>*<sp/>MotorPolepairs))<sp/>*<sp/>10<sp/>*<sp/>60</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//RPM<sp/>=<sp/>(steps/<sp/>_NumberofSteps)<sp/>*<sp/>600.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Alternate<sp/>function<sp/>accurancy<sp/>+-25<sp/>RPM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>RPM<sp/>=<sp/>(steps/<sp/>_NumberofSteps)<sp/>*<sp/>(60000.0<sp/>/<sp/>Elapsed);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Very<sp/>precise<sp/>but<sp/>needs<sp/>more<sp/>calc<sp/>power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Error<sp/>=<sp/>_RefRPM<sp/>-<sp/>RPM;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_DutyCycle<sp/>&lt;<sp/>CONF_DUTYCYCLE_TOP_LIMIT)<sp/>_PI_Integral<sp/>=<sp/>_PI_Integral<sp/>+<sp/>Error;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pwm<sp/>=<sp/>MotorParam.PI_Reg_P<sp/>*<sp/>Error<sp/>+<sp/>MotorParam.PI_Reg_I<sp/>*<sp/>_PI_Integral;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Limit<sp/>PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwm<sp/>&gt;<sp/>CONF_DUTYCYCLE_TOP_LIMIT)<sp/>pwm<sp/>=<sp/>CONF_DUTYCYCLE_TOP_LIMIT;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwm<sp/>&lt;<sp/>CONF_DUTYCYCLE_BOTTOM_LIMIT)<sp/>pwm<sp/>=<sp/>CONF_DUTYCYCLE_BOTTOM_LIMIT;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>_DutyCycle<sp/>=<sp/>(uint8_t)<sp/>pwm;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>_StepCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>rpmtimer-&gt;<ref refid="d8/d08/class_timer_1a35282728bc2a470190325982d6a2c6e0" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a34242fb60ba90c268c0c34bb7c254c44" kindref="member">BLDCMcontrol::ReadHallSensor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/>hallpattern<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>hallpattern<sp/>=<sp/>(<sp/>((hallA-&gt;<ref refid="d4/dde/class_g_p_i_o_1a9e0701f519e16573691834bcab1ad03a" kindref="member">read</ref>())&lt;&lt;2)<sp/>|<sp/>((hallB-&gt;<ref refid="d4/dde/class_g_p_i_o_1a9e0701f519e16573691834bcab1ad03a" kindref="member">read</ref>())&lt;&lt;1)<sp/>|<sp/>(hallC-&gt;<ref refid="d4/dde/class_g_p_i_o_1a9e0701f519e16573691834bcab1ad03a" kindref="member">read</ref>())<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>_latestPattern<sp/>=<sp/>hallpattern;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hallpattern;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a9c71b8b41ff9a07bb8a9674d99654b5b" kindref="member">BLDCMcontrol::ReadBEMFSensor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/>hallpattern<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>hallpattern<sp/>=<sp/>(<sp/>((bemfU-&gt;<ref refid="d4/dde/class_g_p_i_o_1a9e0701f519e16573691834bcab1ad03a" kindref="member">read</ref>())&lt;&lt;2)<sp/>|<sp/>((bemfV-&gt;<ref refid="d4/dde/class_g_p_i_o_1a9e0701f519e16573691834bcab1ad03a" kindref="member">read</ref>())&lt;&lt;1)<sp/>|<sp/>(bemfW-&gt;<ref refid="d4/dde/class_g_p_i_o_1a9e0701f519e16573691834bcab1ad03a" kindref="member">read</ref>())<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>_latestPattern<sp/>=<sp/>hallpattern;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hallpattern;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">uint8_t<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a5d3bd179731c4ab34cb845f4cd8f584e" kindref="member">BLDCMcontrol::commutateHallBLDC</ref>(uint8_t<sp/>dutycycle,<sp/>uint8_t<sp/>commutation_step,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hallsensor)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>_DutyCycle<sp/>=<sp/>dutycycle;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((commutation_step&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(commutation_step<sp/>&lt;<sp/>6))<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a0e120427cce5e2bb5dae353540f13fa5" kindref="member">UpdateHardware</ref>(commutation_step);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>timer-&gt;<ref refid="d8/d08/class_timer_1ae4d88c04713dadad65eb5e31f2bfc227" kindref="member">delayMilli</ref>(200);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hallsensor)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a34242fb60ba90c268c0c34bb7c254c44" kindref="member">ReadHallSensor</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a0e120427cce5e2bb5dae353540f13fa5" kindref="member">BLDCMcontrol::UpdateHardware</ref>(uint8_t<sp/>CommutationStep)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(CommutationStep)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga0500575219d73e95ec20217397fe9b5b" kindref="member">setHalfbridge</ref>(<ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActivePWM,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmU-&gt;ADCWrite(_DutyCycle);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmV-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmW-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Floating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga0500575219d73e95ec20217397fe9b5b" kindref="member">setHalfbridge</ref>(<ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActivePWM,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmU-&gt;ADCWrite(_DutyCycle);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmV-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Floating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmW-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga0500575219d73e95ec20217397fe9b5b" kindref="member">setHalfbridge</ref>(<ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActivePWM,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmU-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Floating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmV-&gt;ADCWrite(_DutyCycle);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmW-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga0500575219d73e95ec20217397fe9b5b" kindref="member">setHalfbridge</ref>(<ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActivePWM,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmU-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmV-&gt;ADCWrite(_DutyCycle);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmW-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Floating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga0500575219d73e95ec20217397fe9b5b" kindref="member">setHalfbridge</ref>(<ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActivePWM);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmU-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmV-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Floating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmW-&gt;ADCWrite(_DutyCycle);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga0500575219d73e95ec20217397fe9b5b" kindref="member">setHalfbridge</ref>(<ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;Floating,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActiveGround,<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;ActivePWM);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmU-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Floating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmV-&gt;ADCWrite(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwmW-&gt;ADCWrite(_DutyCycle);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a82aea9fa422c4961e9bc51448104c3b9" kindref="member">BLDCMcontrol::PrintErrorMessage</ref>(_ErrorMessages<sp/>msg)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(msg)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PARAMETER_MISSING:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;=&gt;<sp/>Error:<sp/>For<sp/>this<sp/>operation<sp/>mode<sp/>one<sp/>or<sp/>more<sp/>motor<sp/>parameter(s)<sp/>are<sp/>missing!<sp/>&lt;=&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PARAMETER_OUT_OF_RANGE:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;=&gt;<sp/>Warning:<sp/>A<sp/>parameter<sp/>is<sp/>out<sp/>of<sp/>range!<sp/>&lt;=&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1aceeca2f716f9bc97b33ab2bb3931e9a3" kindref="member">setLED</ref>(50,0,0);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>onboard<sp/>RGB-LED<sp/>to<sp/>red</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a039bee500b086e82745fd36b76908db3" kindref="member">BLDCMcontrol::setupRiseFallTimeRegulation</ref>(uint8_t<sp/>hb)</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>_MotorStartEnable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d9/d8d/group__tle9xxxapi_1ga62aefffcf1c28787ba829c2188286df1" kindref="member">init_AGC_Algorithm</ref>(hb);<sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a26add64fa56fa4a9a52a724036a664e8" kindref="member">BLDCMcontrol::riseFallTimeRegulation</ref>(uint8_t<sp/>hb,<sp/>uint8_t<sp/>*<sp/>iCharge,<sp/>uint8_t<sp/>*<sp/>iDischarge,<sp/>uint8_t<sp/>*<sp/>risetime,<sp/>uint8_t<sp/>*<sp/>falltime)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>_RFTReg_enable<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>_RFTReg_phase<sp/>=<sp/>hb;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>_RFT_iCharge<sp/>=<sp/>iCharge;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>_RFT_iDischarge<sp/>=<sp/>iDischarge;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>_RFT_risetime<sp/>=<sp/>risetime;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>_RFT_falltime<sp/>=<sp/>falltime;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a59c67eedf12193991d96262df0ecd21d" kindref="member">BLDCMcontrol::setTrisefallTarget</ref>(uint8_t<sp/>trise_tg,<sp/>uint8_t<sp/>tfall_tg)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((trise_tg<sp/>&lt;<sp/>64)<sp/>&amp;&amp;<sp/>(tfall_tg<sp/>&lt;<sp/>64))</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;m_trise_tg<sp/>=<sp/>trise_tg;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;m_tfall_tg<sp/>=<sp/>tfall_tg;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1a4f76e5dcad3446716b2cb94447f3d474" kindref="member">BLDCMcontrol::getCurrent</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cso_voltage<sp/>=<sp/><ref refid="de/df7/class_b_l_d_c_mcontrol_1ae9821679b71a1a031077b569d6e9b679" kindref="member">controller</ref>-&gt;<ref refid="d4/dc2/group__tle9563api_1ga25dcba7f861a0c0b34a1ff8014dd371c" kindref="member">getCSOVoltage</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>(cso_voltage<sp/>*<sp/>1000)<sp/>/<sp/>SHUNT_RESISTOR_VALUE;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/BrixelKilian/Documents/Arduino/libraries/bldc-motor-control-tle956x/src/corelib/BLDCM-control.cpp"/>
  </compounddef>
</doxygen>
